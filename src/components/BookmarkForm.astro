---

---

<form class="card bg-base-200 shadow-xl p-6 max-w-xl mx-auto" id="bookmarkForm">
  <div class="form-control w-full">
    <label class="label" for="endpoint">
      <span class="label-text" onclick="">xBrowserSync API Endpoint</span>
    </label>
    <input
      type="url"
      id="endpoint"
      name="endpoint"
      placeholder="https://api.xbrowsersync.org"
      value="https://api.xbrowsersync.org"
      class="input input-bordered w-full"
      required
    />
  </div>

  <div class="form-control w-full mt-4">
    <label class="label" for="syncId">
      <span class="label-text">Sync ID</span>
    </label>
    <input
      type="text"
      id="syncId"
      name="syncId"
      autocomplete="username"
      placeholder="Enter your Sync ID"
      class="input input-bordered w-full"
      required
    />
  </div>

  <div class="form-control w-full mt-4">
    <label class="label" for="password">
      <span class="label-text">Password</span>
    </label>
    <input
      type="password"
      id="password"
      name="password"
      autocomplete="password"
      placeholder="Enter your password"
      class="input input-bordered w-full"
      required
    />
  </div>

  <button type="submit" class="btn btn-primary mt-6"> Load Bookmarks </button>
</form>

<script>
  import { decriptBookmarks } from "../utils/decipher";
  let hasCache = false;
  if (typeof localStorage !== "undefined") {
    const storedBookmarks = localStorage.getItem("bookmarks");

    hasCache = !!storedBookmarks;
  }
  if (hasCache) {
    document.querySelectorAll("#bookmarkForm").forEach((form) => {
      form.classList.add("hidden");
    });
  }
  console.log(hasCache);
  document
    .getElementById("bookmarkForm")
    ?.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      const data = {
        endpoint: formData.get("endpoint"),
        syncId: formData.get("syncId"),
        password: formData.get("password"),
      };

      // TODO: Implement bookmark decryption logic
      console.log("Form submitted with data:", data);

      try {
        let url = `https://api.xbrowsersync.org/bookmarks/${data.syncId}`;

        let options = {
          method: "GET",
        };

        const res: {
          bookmarks: string;
        } = await fetch(url, options).then((res) => res.json());

        const result = await decriptBookmarks({
          pw: data.password.toString(),
          syncId: data.syncId.toString(),
          encryptedBookmarks: res.bookmarks,
        });
        console.dir(JSON.parse(result));
        localStorage.setItem("bookmarks", result);

        window.location.reload();
      } catch (error) {
        console.error("Error decrypting bookmarks:", error);
      }
    });
</script>
